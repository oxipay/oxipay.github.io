{
    "docs": [
        {
            "location": "/", 
            "text": "Oxipay\n\n\nOxipay is a payment gateway that integrates seamlessly with a number of leading eCommerce solutions including Shopify, WooCommerce and Magento. Oxipay helps you increase your customer base by offering interest free payment plans.", 
            "title": "Home"
        }, 
        {
            "location": "/#oxipay", 
            "text": "Oxipay is a payment gateway that integrates seamlessly with a number of leading eCommerce solutions including Shopify, WooCommerce and Magento. Oxipay helps you increase your customer base by offering interest free payment plans.", 
            "title": "Oxipay"
        }, 
        {
            "location": "/platforms/shopify/", 
            "text": "Setup on Shopify\n\n\n\nTo setup and configure Oxipay on your Shopify store, please use the instructions below\n\n\n\nIntegrating Oxipay\n\n\n\n  You will need your \nMerchant ID\n and an \nEncryption Key\n handy before continuing with the installation.\n\n\n\n\n1 \u2013 Email \npit@oxipay.com.au\n for a copy of the \nOxipay Gateway Authorisation\n URL. \n\n\n2 - Clicking the link to be taken to your store's setting page to add Oxipay.\n\n\n3 - Once logged in, you will see the prompt below. Click \nAdd payment gateway\n.\n\n\n\n\n4 - If successful, a confirmation message will be display at the bottom of the screen.\n\n\n\n\n5 - Bring the \nAlternative Payments\n section into focus, expand the \nSelect additional payment method\n drop-down and click \nOxipay\n.\n\n\n\n\n6 - Key in you \nMerchant Number\n and \nEncryption Key\n then click on \nSave\n. You can also specify the credit cards you want to allow with Oxipay.\n\n\n\n\n\n  The \nShow\n checkbox makes your Encryption Key visible as you type it in; otherwise it is masked. \n\n\n\n\n\n  Use \nTest Mode\n to test Oxipay or diagnose issue; transactions are similated and credit cards are not debited.", 
            "title": "Shopify"
        }, 
        {
            "location": "/platforms/shopify/#integrating-oxipay", 
            "text": "You will need your  Merchant ID  and an  Encryption Key  handy before continuing with the installation.  1 \u2013 Email  pit@oxipay.com.au  for a copy of the  Oxipay Gateway Authorisation  URL.   2 - Clicking the link to be taken to your store's setting page to add Oxipay.  3 - Once logged in, you will see the prompt below. Click  Add payment gateway .   4 - If successful, a confirmation message will be display at the bottom of the screen.   5 - Bring the  Alternative Payments  section into focus, expand the  Select additional payment method  drop-down and click  Oxipay .   6 - Key in you  Merchant Number  and  Encryption Key  then click on  Save . You can also specify the credit cards you want to allow with Oxipay.   \n  The  Show  checkbox makes your Encryption Key visible as you type it in; otherwise it is masked.   \n  Use  Test Mode  to test Oxipay or diagnose issue; transactions are similated and credit cards are not debited.", 
            "title": "Integrating Oxipay"
        }, 
        {
            "location": "/platforms/woocommerce/", 
            "text": "Setup on WooCommerce\n\n\n\nYou can install Oxipay automatically by uploading the plugin or manually by copying plugin files. Use the same instructions to upgrade your existing plugin to a newer release.\n\n\nPlugin Installation\n\n\n\n  You will need your \nMerchant ID\n and an \nEncryption Key\n handy before continuing with the installation.\n\n\n\n\n1 - Download the plugin from \ngithub.com/oxipay/oxipay-woocommerce/releases\n.\n\n\n2 - Log into \nWordPress Admin\n then click on \nPlugins\n on the left menu.\n\n\n3 - This will take you to the \nPlugins\n page; click on \nAdd New\n on the top left.\n\n\n4 - This will take you to the \nAdd Plugins\n page; click on \nUpload Plugin\n on the top left.\n\n\n5 - Click \nChoose File\n on the form that appears, select the Oxipay plugin and then click \nInstall Now\n.\n\n\n6 - This will begin the installation. Once complate, click on \nActivate Plugin\n.\n\n\n7 - This will take you to the \nPlugins\n page with a \nPlugin activated\n message at the top.\n\n\n8 - Examine installed plugins and confirm Oxipay is installed and activated.\n\n\n\n\nConfiguration\n\n\nOpen WooCommerce's \nSettings\n page, click on \nCheckout\n then on \nOxipay\n.\n\n\n\n\nBelow is a description of the various settings you will find in the Oxipay settings page.\n\n\nEnabled\n: Enables or disables Oxipay\n\n\nTitle\n: Title for Oxipay that is displayed on checkout screen.\n\n\nDescription\n: Description for Oxipay that is displayed on checkout screen.\n\n\nShop Name\n: Your online store's name as displayed on the Internet or TV.\n\n\nOxipay Gateway URL\n: The Oxipay gateway that the plugin would need to communicate with for it to process payments via Oxipay.\n\n\n\n\n\n\n\n\nOxipay Environment\n\n\nURL\n\n\n\n\n\n\n\n\n\n\nProduction Gateway\n\n\nhttps://secure.oxipay.com.au/Checkout?platform=WooCommerce\n\n\n\n\n\n\nSandbox Gateway\n\n\nhttps://securesandbox.oxipay.com.au/Checkout?platform=WooCommerce\n\n\n\n\n\n\n\n\nMerchant ID\n: Identifies your business and is provided as part of your onboarding.\n\n\nAPI Key\n: Code used to verify that payment requests from your site are valid. \n\n\n  The Oxipay Platform Integration Team will provide you with your API key over the phone.", 
            "title": "WooCommerce"
        }, 
        {
            "location": "/platforms/woocommerce/#plugin-installation", 
            "text": "You will need your  Merchant ID  and an  Encryption Key  handy before continuing with the installation.  1 - Download the plugin from  github.com/oxipay/oxipay-woocommerce/releases .  2 - Log into  WordPress Admin  then click on  Plugins  on the left menu.  3 - This will take you to the  Plugins  page; click on  Add New  on the top left.  4 - This will take you to the  Add Plugins  page; click on  Upload Plugin  on the top left.  5 - Click  Choose File  on the form that appears, select the Oxipay plugin and then click  Install Now .  6 - This will begin the installation. Once complate, click on  Activate Plugin .  7 - This will take you to the  Plugins  page with a  Plugin activated  message at the top.  8 - Examine installed plugins and confirm Oxipay is installed and activated.", 
            "title": "Plugin Installation"
        }, 
        {
            "location": "/platforms/woocommerce/#configuration", 
            "text": "Open WooCommerce's  Settings  page, click on  Checkout  then on  Oxipay .   Below is a description of the various settings you will find in the Oxipay settings page.  Enabled : Enables or disables Oxipay  Title : Title for Oxipay that is displayed on checkout screen.  Description : Description for Oxipay that is displayed on checkout screen.  Shop Name : Your online store's name as displayed on the Internet or TV.  Oxipay Gateway URL : The Oxipay gateway that the plugin would need to communicate with for it to process payments via Oxipay.     Oxipay Environment  URL      Production Gateway  https://secure.oxipay.com.au/Checkout?platform=WooCommerce    Sandbox Gateway  https://securesandbox.oxipay.com.au/Checkout?platform=WooCommerce     Merchant ID : Identifies your business and is provided as part of your onboarding.  API Key : Code used to verify that payment requests from your site are valid.  \n  The Oxipay Platform Integration Team will provide you with your API key over the phone.", 
            "title": "Configuration"
        }, 
        {
            "location": "/platforms/magento_1/", 
            "text": "Setup on Magento 1\n\n\n\nYou can install Oxipay plugin by manually copying plugin files across into your store's webserver. \n\nUse the same instructions to upgrade your existing plugin to a newer release.\n\n\nSupported Tech Stacks\n\n\nOxipay has been developed and tested against the following Magento tech stacks:\n\n\n\n\n\n\n\n\nMagento Version\n\n\nOperating System\n\n\nSQL\n\n\nPHP Version\n\n\nWeb Server\n\n\n\n\n\n\n\n\n\n\nMagento 1.9.1.0 (CE)\n\n\nUbuntu 16.04 LTS\n\n\n5.5.55\n\n\n5.6.30\n\n\nApache 2.4.18\n\n\n\n\n\n\nMagento 1.4.2.0 (CE)\n\n\nUbuntu 14.04 LTS\n\n\n5.5.54\n\n\n5.5.9\n\n\nApache 2.4.7\n\n\n\n\n\n\n\n\nPlugin Installation\n\n\n\n  You will need your \nMerchant Number\n and an \nEncryption Key\n handy before continuing with the installation.\n\n\n\n\n1 - You can create a backup of your store by navigating to \nSystem\n -\n \nTools\n -\n \nBackup\n.\n\n\n2 - Download the Oxipay plugin from \ngithub.com/oxipay/oxipay-magento-1.x/releases\n.\n\n\n3 - Unzip it, then copy the following plugin files and folders into the corresponding folder on the \napp\n folder on the Magento root directory.\n\n\n\n\n/app/code/community/Oxipay\n\n\n/app/design/frontend/base/default/template/oxipayments\n\n\n/app/design/adminhtml/base/default/template/oxipayments\n\n\n/app/etc/modules/Oxipay_Oxipayments.xml\n\n\n\n\n4 - Login into Magento's \nAdmin Panel\n, click on \nSystem\n then select \nCache Management\n.\n\n\n5 - On the \nCache Management\n page, click on \nFlush Magento Cache\n.\n\n\n\n\nConfiguration\n\n\n1 - Navigating to \nSystem\n \n \nConfiguration\n.\n\n\n2 - On \nConfiguration\n page, scroll downwards then click on \nPayment Methods\n on left side menu.\n\n\n\n\n3 - Confirm  \nOxipay Checkout\n is visible and once expanded looks similar to the image below.\n\n\n\n  Some fields have been blurred out in the image.", 
            "title": "Magento 1"
        }, 
        {
            "location": "/platforms/magento_1/#supported-tech-stacks", 
            "text": "Oxipay has been developed and tested against the following Magento tech stacks:     Magento Version  Operating System  SQL  PHP Version  Web Server      Magento 1.9.1.0 (CE)  Ubuntu 16.04 LTS  5.5.55  5.6.30  Apache 2.4.18    Magento 1.4.2.0 (CE)  Ubuntu 14.04 LTS  5.5.54  5.5.9  Apache 2.4.7", 
            "title": "Supported Tech Stacks"
        }, 
        {
            "location": "/platforms/magento_1/#plugin-installation", 
            "text": "You will need your  Merchant Number  and an  Encryption Key  handy before continuing with the installation.  1 - You can create a backup of your store by navigating to  System  -   Tools  -   Backup .  2 - Download the Oxipay plugin from  github.com/oxipay/oxipay-magento-1.x/releases .  3 - Unzip it, then copy the following plugin files and folders into the corresponding folder on the  app  folder on the Magento root directory.   /app/code/community/Oxipay  /app/design/frontend/base/default/template/oxipayments  /app/design/adminhtml/base/default/template/oxipayments  /app/etc/modules/Oxipay_Oxipayments.xml   4 - Login into Magento's  Admin Panel , click on  System  then select  Cache Management .  5 - On the  Cache Management  page, click on  Flush Magento Cache .", 
            "title": "Plugin Installation"
        }, 
        {
            "location": "/platforms/magento_1/#configuration", 
            "text": "1 - Navigating to  System     Configuration .  2 - On  Configuration  page, scroll downwards then click on  Payment Methods  on left side menu.   3 - Confirm   Oxipay Checkout  is visible and once expanded looks similar to the image below.  \n  Some fields have been blurred out in the image.", 
            "title": "Configuration"
        }, 
        {
            "location": "/platforms/magento_2/", 
            "text": "Setup on Magento 2\n\n\n\nYou can install Oxipay plugin by manually copying plugin files across into your store's webserver. \n\nUse the same instructions to upgrade your existing plugin to a newer release.\n\n\nSupported Tech Stacks\n\n\nOxipay has been tested against the following tech stacks:\n\n\n\n\n\n\n\n\nMagento Version\n\n\nOperating System\n\n\nSQL\n\n\nPHP Version\n\n\nWeb Server\n\n\n\n\n\n\n\n\n\n\nMagento 2.1.5\n\n\nUbuntu 14.04.5 LTS\n\n\nMySQL 5.7.17\n\n\n7.0.16\n\n\nApache 2.4.25\n\n\n\n\n\n\n\n\nPlugin Installation\n\n\n\n  You will need your \nMerchant Number\n and an \nEncryption Key\n handy before continuing with the installation.\n\n\n\n\n1 - Download the Oxipay plugin from \ngithub.com/oxipay/oxipay-magento-2.x/releases\n.\n\n\n2 - Unzip it then copy the inner \nOxipay\n folder into the \nMAGENTO_DIR/app/code\n directory on your webserver. If the \ncode\n folder doesn't exist, then create it manually.\n\n\n3 - Change directory into \nMAGENTO_DIR/bin\n to make the \nmagento\n utility available.\n\n\n4 - Run \nmagento setup:upgrade\n. This will auto-enable Oxipay as part of \nsetup:upgrade\n. You should see \nModule 'Oxipay_OxipayPaymentGateway'\n in the output of the command.\n\n\n\n\n  Depending on your tech stack, you might have to use the \nphp\n prefix (\nphp magento setup:upgrade\n) when running the various \nmagento\n commands.\n\n\n\n\n5 - Flush Magento's Cache by navigating to \nSettings\n -\n \nCache Management\n -\n \nFlush Magento Cache\n. Alternatively, you can run \nMAGENTO_DIR/bin/magento cache:flush\n from the command line.\n\n\n6 - Run \nsetup:static-conent:deploy\n to avoid generated HTML referring to javascript/css that haven't been added to the list of compiled/minified assets which can break your store's front-end/admin panel.\n\n\n7 - To view Oxipay's settings page, navigate to \nStores\n -\n \nConfiguration\n -\n \nSales\n -\n \nPayment Methods\n.", 
            "title": "Magento 2"
        }, 
        {
            "location": "/platforms/magento_2/#supported-tech-stacks", 
            "text": "Oxipay has been tested against the following tech stacks:     Magento Version  Operating System  SQL  PHP Version  Web Server      Magento 2.1.5  Ubuntu 14.04.5 LTS  MySQL 5.7.17  7.0.16  Apache 2.4.25", 
            "title": "Supported Tech Stacks"
        }, 
        {
            "location": "/platforms/magento_2/#plugin-installation", 
            "text": "You will need your  Merchant Number  and an  Encryption Key  handy before continuing with the installation.  1 - Download the Oxipay plugin from  github.com/oxipay/oxipay-magento-2.x/releases .  2 - Unzip it then copy the inner  Oxipay  folder into the  MAGENTO_DIR/app/code  directory on your webserver. If the  code  folder doesn't exist, then create it manually.  3 - Change directory into  MAGENTO_DIR/bin  to make the  magento  utility available.  4 - Run  magento setup:upgrade . This will auto-enable Oxipay as part of  setup:upgrade . You should see  Module 'Oxipay_OxipayPaymentGateway'  in the output of the command.  \n  Depending on your tech stack, you might have to use the  php  prefix ( php magento setup:upgrade ) when running the various  magento  commands.  5 - Flush Magento's Cache by navigating to  Settings  -   Cache Management  -   Flush Magento Cache . Alternatively, you can run  MAGENTO_DIR/bin/magento cache:flush  from the command line.  6 - Run  setup:static-conent:deploy  to avoid generated HTML referring to javascript/css that haven't been added to the list of compiled/minified assets which can break your store's front-end/admin panel.  7 - To view Oxipay's settings page, navigate to  Stores  -   Configuration  -   Sales  -   Payment Methods .", 
            "title": "Plugin Installation"
        }, 
        {
            "location": "/platforms/prestashop/", 
            "text": "Setting up on PrestaShop\n\n\n\nThis document outlines the steps needed to install Oxipay on your PrestaShop store.\n\n\nSupported Tech Stacks\n\n\nOxipay has been tested against the following tech stacks:\n\n\n\n\n\n\n\n\nPrestashop Version\n\n\nOperating System\n\n\nSQL\n\n\nPHP Version\n\n\nWeb Server\n\n\n\n\n\n\n\n\n\n\n1.6.1.3\n\n\nUbuntu 14.04.3 LTS\n\n\nMySQL 5.6.27\n\n\n5.5.30\n\n\nApache 2.4.17\n\n\n\n\n\n\n1.6.1.13\n\n\nUbuntu 14.04.5 LTS\n\n\nMySQL 5.5.54\n\n\n5.5.9\n\n\nApache 2.4.7\n\n\n\n\n\n\n\n\nOxipay is not compatible with PrestaShop 1.7 at the moment\n\n\nPlugin Installation\n\n\n\n  You will need your \nMerchant ID\n and an \nEncryption Key (API Key)\n handy before continuing with the installation. \n\n\n\n\nThe plugin can be installed automatically via PrestaShop's admin panel. This section details how to upload and install the plugin, and configure its various parameters for it to work properly.\n\n\n\n  Installation of the plugin requires you to be able to access the store's admin area. If you have trouble accessing your PrestaShop's admin area.\n\n\n\n\n\n\n\nInstallation Procedure\n\n\n1\n - Navigate to the following URL and select the zip file to download the Oxipay plugin.\n\n\nFor PrestaShop 1.6\n\n\nhttps://github.com/oxipay/oxipay-prestashop-1.6/releases\n\n\nFor PrestaShop 1.7\n\nOxipay is not compatible with PrestaShop 1.7 at the moment.\n\n\n\n2\n - Log into your PrestaShop's admin area.\n\n\n3\n - Once logged in, you will be presented with your store's dashboard. From the side menu that appears to the left, click on \nModules and Services\n.\n\n\n\n\n6\n - Scroll to the top of the page and then click on the \nAdd a new module\n icon. This will open up the \nAdd a new module\n panel.\n\n\n\n\n7\n - From within the \nAdd a new module\n panel, click on \nChoose a file\n. This will allow you to specify the folder or directory that contains the Oxipay .zip plugin. Once selected, click on \nUpload this module\n.\n\n\n\n\n8\n - If the upload of the plugin was successful, you will be presented with a success alert at the top of the page.\n\n\n\n\n9\n - Scroll downwards to bring the \nModules List\n panel into focus, and you will find Oxipay Plugin in the modules list.\n\n\n\n\n10\n - Click on the green \nInstall\n button next to the Oxipay PrestaShop listing.\n\n\n11\n - Click on the orange \nProceed with the Installation\n button. (This message is displayed because the module you are installing was uploaded from your computer, rather than through PrestaShop's module marketplace.)\n\n\n\n\n12\n - After the installation, you will be re-directed to the the Oxipay module configuration page with a message at the top of the page indicating that the module was installed successfully.\n\n\n\n\nConfiguration\n\n\nImmediately after installing the Oxipay plugin, you would be automatically re-directed to the plugin settings page. Otherwise, you can bring up this page by going to the Modules and Services page, finding the oxipay listing, and clicking the \nConfigure\n button next to it.\n\n\n1 - \nTitle\n: This configures the plugin title that gets displayed to the end user during checkout. By default it is configured to \nOxipay\n. \n\n\n2 - \nLogo\n: This controls the Oxipay Logo that gets displayed.\n\n\n3 - \nDescription\n: This configures the plugin description text that gets displayed to the end user as part of the checkout process. By default, it is configured to \nBreathe easy with Oxipay, an interest-free instalment payment plan\n.\n\n\n4 - \nOxipay Gateway URL\n: This specifies the Oxipay gateway that the plugin would need to communicate with for it to be able to process payments via Oxipay.\n\n\n\n\n\n\n\n\nOxipay Environment\n\n\nURL\n\n\n\n\n\n\n\n\n\n\nProduction Gateway\n\n\nhttps://secure.oxipay.com.au/Checkout?platform=Default\n\n\n\n\n\n\nSandbox Gateway\n\n\nhttps://securesandbox.oxipay.com.au/Checkout?platform=Default\n\n\n\n\n\n\n\n\n5 - \nMerchant ID\n: This is the Oxipay Merchant ID that you are provided with as part of your on-boarding when signing-up for Oxipay.\n\n\n6 - \nAPI Key\n: The API Key or the Encryption key is a case-sensitive alpha-numeric sequence that is used to authenticate payment requests originating from your store. It is vital that you protect it and don't provide it to unauthorised individuals.\n\n\n  The Oxipay Platform Integration Team will provide you with your API key over the phone.\n\n\n\nOnce you have finished making the necessary configuration changes or updates, click the \nSave\n button on the bottom left.\n\n\nUpgrading Oxipay\n\n\nYou can upgrade your Oxipay PrestaShop plugin by uninstalling the old one and installing the newer version. \n\n\nTo uninstall the Oxipay plugin you need to:\n\n\n1 - Locate the Oxipay plugin in the \nModules and Services\n page\n\n\n2 - From the drop-down menu that appears, click \nDelete\n.\n\n\n\n\n3 - Click \nOK\n when asked whether you are sure to premanently remove the plugin. Once the uninstallation is completed, you will be presented with a success message at the top of the page similar to the one shown in the screenshot below.\n\n\n\n\n4 - You can now download the newer version of the Oxipay PrestaShop plugin and install it as per the instructions in the \nInstalling Oxipay\n section of this document.", 
            "title": "PrestaShop"
        }, 
        {
            "location": "/platforms/prestashop/#supported-tech-stacks", 
            "text": "Oxipay has been tested against the following tech stacks:     Prestashop Version  Operating System  SQL  PHP Version  Web Server      1.6.1.3  Ubuntu 14.04.3 LTS  MySQL 5.6.27  5.5.30  Apache 2.4.17    1.6.1.13  Ubuntu 14.04.5 LTS  MySQL 5.5.54  5.5.9  Apache 2.4.7     Oxipay is not compatible with PrestaShop 1.7 at the moment", 
            "title": "Supported Tech Stacks"
        }, 
        {
            "location": "/platforms/prestashop/#plugin-installation", 
            "text": "You will need your  Merchant ID  and an  Encryption Key (API Key)  handy before continuing with the installation.   The plugin can be installed automatically via PrestaShop's admin panel. This section details how to upload and install the plugin, and configure its various parameters for it to work properly.  \n  Installation of the plugin requires you to be able to access the store's admin area. If you have trouble accessing your PrestaShop's admin area.", 
            "title": "Plugin Installation"
        }, 
        {
            "location": "/platforms/prestashop/#installation-procedure", 
            "text": "1  - Navigate to the following URL and select the zip file to download the Oxipay plugin.  For PrestaShop 1.6  https://github.com/oxipay/oxipay-prestashop-1.6/releases  For PrestaShop 1.7 \nOxipay is not compatible with PrestaShop 1.7 at the moment.  2  - Log into your PrestaShop's admin area.  3  - Once logged in, you will be presented with your store's dashboard. From the side menu that appears to the left, click on  Modules and Services .   6  - Scroll to the top of the page and then click on the  Add a new module  icon. This will open up the  Add a new module  panel.   7  - From within the  Add a new module  panel, click on  Choose a file . This will allow you to specify the folder or directory that contains the Oxipay .zip plugin. Once selected, click on  Upload this module .   8  - If the upload of the plugin was successful, you will be presented with a success alert at the top of the page.   9  - Scroll downwards to bring the  Modules List  panel into focus, and you will find Oxipay Plugin in the modules list.   10  - Click on the green  Install  button next to the Oxipay PrestaShop listing.  11  - Click on the orange  Proceed with the Installation  button. (This message is displayed because the module you are installing was uploaded from your computer, rather than through PrestaShop's module marketplace.)   12  - After the installation, you will be re-directed to the the Oxipay module configuration page with a message at the top of the page indicating that the module was installed successfully.", 
            "title": "Installation Procedure"
        }, 
        {
            "location": "/platforms/prestashop/#configuration", 
            "text": "Immediately after installing the Oxipay plugin, you would be automatically re-directed to the plugin settings page. Otherwise, you can bring up this page by going to the Modules and Services page, finding the oxipay listing, and clicking the  Configure  button next to it.  1 -  Title : This configures the plugin title that gets displayed to the end user during checkout. By default it is configured to  Oxipay .   2 -  Logo : This controls the Oxipay Logo that gets displayed.  3 -  Description : This configures the plugin description text that gets displayed to the end user as part of the checkout process. By default, it is configured to  Breathe easy with Oxipay, an interest-free instalment payment plan .  4 -  Oxipay Gateway URL : This specifies the Oxipay gateway that the plugin would need to communicate with for it to be able to process payments via Oxipay.     Oxipay Environment  URL      Production Gateway  https://secure.oxipay.com.au/Checkout?platform=Default    Sandbox Gateway  https://securesandbox.oxipay.com.au/Checkout?platform=Default     5 -  Merchant ID : This is the Oxipay Merchant ID that you are provided with as part of your on-boarding when signing-up for Oxipay.  6 -  API Key : The API Key or the Encryption key is a case-sensitive alpha-numeric sequence that is used to authenticate payment requests originating from your store. It is vital that you protect it and don't provide it to unauthorised individuals. \n  The Oxipay Platform Integration Team will provide you with your API key over the phone.  Once you have finished making the necessary configuration changes or updates, click the  Save  button on the bottom left.", 
            "title": "Configuration"
        }, 
        {
            "location": "/platforms/prestashop/#upgrading-oxipay", 
            "text": "You can upgrade your Oxipay PrestaShop plugin by uninstalling the old one and installing the newer version.   To uninstall the Oxipay plugin you need to:  1 - Locate the Oxipay plugin in the  Modules and Services  page  2 - From the drop-down menu that appears, click  Delete .   3 - Click  OK  when asked whether you are sure to premanently remove the plugin. Once the uninstallation is completed, you will be presented with a success message at the top of the page similar to the one shown in the screenshot below.   4 - You can now download the newer version of the Oxipay PrestaShop plugin and install it as per the instructions in the  Installing Oxipay  section of this document.", 
            "title": "Upgrading Oxipay"
        }, 
        {
            "location": "/platforms/cubecart/", 
            "text": "Setting up Oxipay on a CubeCart Store\n\n\nThis document outlines the steps needed to install Oxipay on your CubeCart Store.\n\n\n\n  At the time of writing this article, Oxipay was developed and tested against CubeCart version \n6.1.1\n, although the plugin should be compatible with other CubeCart versions. If you encounter any issues, please contact us to resolve them as soon as possible.\n\n\n\n\nInstalling Oxipay\n\n\n\n  You will need a \nMerchant ID\n and \nAPI Key\n before continuing with the installation procedure. They are required to uniquely identify the Merchant and provide a secure link. If you don't have either of these, please contact \nsupport@oxipay.com.au\n\n\n\n\n\nThe plugin can be installed via CubeCart's Admin Control Panel, either manually or automatically using a Token. This section details how to upload the plugin, and install and configure its various parameters for it to work properly.\n\n\n\n  If you have trouble accessing your CubeCart's Admin Control Panel, please consult CubeCart's official \nknowledgebase\n and \nforums\n, or your IT department to resolve the issue.\n\n\n\n\nAutomatic Installation using Token\n\n\n1\n - Navigate to the following URL.\n\n\nhttps://www.cubecart.com/extensions/payment-gateways/oxipay\n\n\n2\n - Select the \nlightning bolt\n button, next to your required Oxipay plugin version, to reveal the \nAuto Install/Upgrade Token\n\n\n\n\n3\n - Copy the \nToken\n from within the pop-up.\n\n\n\n\n4\n - Log into the CubeCart Admin Control Panel as an Administrator.\n\n\n\n\n5\n - Once logged in, you will be presented with your Store's dashboard. From the side menu that appears to the left, scroll to the \nExtensions\n section and select \nManage Extensions\n.\n\n\n\n\n6\n - Copy the \nAuto Install/Upgrade Token\n into the Token field on the \nManage Extensions\n page and select the \nGo\n button.\n\n\n\n\n7\n - If the module has been installed correctly, the module will appear in the list of \nAvailable Extensions\n.\n\n\n\n\n\nIf the automatic installation is not successful, you will be presented with a message at the top of the page similar to the screenshot below. If this continues to be a problem, please refer to the \nManual Installation\n procedure.\n\n\n\n\n\n\nManual Installation\n\n\n1\n - Navigate to the following URL.\n\n\nhttps://www.cubecart.com/extensions/payment-gateways/oxipay\n\n\n2\n - Select the \ndownload\n button , next to your required Oxipay plugin version, to download the Oxipay plugin ZIP file.\n\n\n\n\n3\n - Extract the ZIP file and copy the contents to the \nmodules/gateway\n folder of your server\u2019s/site directory.\n\n\n4\n - Ensure the folders/files have adequate read/write permissions set.\n\n\n5\n - Log into the CubeCart Admin Control Panel as an Administrator.\n\n\n\n\n6\n - Once logged in, you will be presented with your Store's dashboard. From the side menu that appears to the left, scroll to the \nExtensions\n section and select \nManage Extensions\n.\n\n\n\n\n7\n - If the module has been installed correctly, the module will appear in the list of \nAvailable Extensions\n.\n\n\n\n\nConfiguring Oxipay\n\n\n\n  This section describes the \nModule Settings\n available once you have installed the Oxipay plugin. This includes the Oxipay endpoints to communicate with, as well as whether or not to enable Test Mode.  \n\n\n\n\n1\n - Log into the CubeCart Admin Control Panel as an Administrator.\n\n\n2\n - Once logged in, you will be presented with your Store's dashboard. From the side menu that appears to the left, scroll to the \nExtensions\n section and select \nManage Extensions\n.\n\n\n3\n - Under the \nAvailable Extensions\n section, select the text \nOxiPay\n to configure the module settings. Descriptions of the options are listed below.\n\n\n\n\n\n  We have intentionally masked the \nMerchant ID\n and \nAPI Key\n in this support document. Please contact us and we will advise you of the settings to use.\n\n\n\n\n\n\n\n\n\n\nStatus\n This must be enabled for the payment options to appear during checkout.\n\n\n\n\n\n\n\nPriority\n  If you have more than one payment gateway, please use this field to define the order they are shown in. A setting of '1' will show it first, '2' second, etc.\n\n\n\n\n\n\n\nScope\n This allows you to specify whether you want the Oxipay plugin to be available via the Main Website only or the Mobile Website only, or both.\n\n\n\n\n\n\n\nDefault\n This must be enabled if you would like Oxipay pre-selected for the Customer as the default payment option.\n\n\n\n\n\n\n\nMerchant ID\n This is the Oxipay Merchant ID that you are provided with as part of your on-boarding when signing-up for Oxipay.\n\n\n\n\n\n\n\nAPI Key\n The API Key or the Encryption key is a case-sensitive alpha-numeric sequence that is used to authenticate payment requests originating from your Store. It is vital that you protect it and don't provide it to unauthorised individuals.\n\n\n\n\n\n\n\nTest Mode\n Indicates whether to process payments over the live Oxipay Gateway URL resulting in real transactions, or to process it over the Oxipay Sandbox Gateway URL which will produce simulated (test) transactions with no real dollar amounts being debited. By default it should be set to \nNo\n unless we are attempting to diagnose issues on your store to do with Oxipay, or you're testing integrating the plugin with your online CubeCart store.\n\n\n\n\n\n\n\nTest Gateway URL\n This specifies the test Oxipay end-point that the plugin would need to communicate with when \nTest Mode\n is enabled. This is mainly used for troubleshooting purposes, particularly if we want to simulate test transactions on your CubeCart Store without having real dollar amounts debited from Credit Cards.\n\n\n\n\n\n\n\nGateway URL\n This specifies the live Oxipay end-point that the plugin would need to communicate with for it to be able to process payments via Oxipay. Note that transactions processed over this URL are real transactions that end up in real dollar amounts being deducted.\n\n\n\n\n\n\n\n\n\n4\n - Once you have finished making the necessary configuration changes, click the \nSave\n button.\n\n\n5\n - \nAustralia\n will be automatically set as an \nEnabled Region\n in the \nAllowed Zones\n tab. This must match the Country set in the CubeCart Store Settings.\n\n\n\n\n\n\n\n\n\nUpgrading Oxipay\n\n\nAutomatic Upgrade\n\n\n\nImportantly, when you perform an automatic upgrade, all the module settings are retained.\nThat is, you do not need to type in your \nMerchant ID\n and \nAPI Key\n again.\n\n\n\n\n1\n - Navigate to the following URL.\n\n\nhttps://www.cubecart.com/extensions/payment-gateways/oxipay\n\n\n2\n - Select the \nlightning bolt\n button, next to your required Oxipay plugin version, to reveal the \nAuto Install/Upgrade Token\n\n\n\n\n3\n - Copy the \nToken\n from within the pop-up.\n\n\n\n\n4\n - Log into the CubeCart Admin Control Panel as an Administrator.\n\n\n\n\n5\n - Once logged in, you will be presented with your Store's dashboard. From the side menu that appears to the left, scroll to the \nExtensions\n section and select \nManage Extensions\n.\n\n\n\n\n6\n - Copy the \nAuto Install/Upgrade Token\n into the Token field on the \nManage Extensions\n page.\n\n\n\n\n7\n - If you enable the option to \nBackup if already exists\n, a backup of the previous plugin version will be created.\n\n\n8\n - Select the \nGo\n button to complete the upgrade.\n\n\n\n\n\nManual Upgrade\n\n\n\nPrior to manually upgrading, you will first need to un-install the previous version.\n\n\n\n\nUn-installing Oxipay\n\n\n1\n - Log into the CubeCart Admin Control Panel as an Administrator.\n\n\n\n\n2\n - Once logged in, you will be presented with your Store's dashboard. From the side menu that appears to the left, scroll to the \nExtensions\n section and select \nManage Extensions\n.\n\n\n\n\n3\n - In the list of \nAvailable Extensions\n, select the \ndelete\n button associated with the \nOxipay\n extension.\n\n\n4\n - If the module has been un-installed correctly, the module will no longer appear in the list of \nAvailable Extensions\n.\n\n\n\n\n5\n - You can now download the new version of the Oxipay CubeCart plugin and install it as per the instructions in the \nInstalling Oxipay\n section of this document.", 
            "title": "CubeCart"
        }, 
        {
            "location": "/platforms/cubecart/#setting-up-oxipay-on-a-cubecart-store", 
            "text": "This document outlines the steps needed to install Oxipay on your CubeCart Store.  \n  At the time of writing this article, Oxipay was developed and tested against CubeCart version  6.1.1 , although the plugin should be compatible with other CubeCart versions. If you encounter any issues, please contact us to resolve them as soon as possible.", 
            "title": "Setting up Oxipay on a CubeCart Store"
        }, 
        {
            "location": "/platforms/cubecart/#installing-oxipay", 
            "text": "You will need a  Merchant ID  and  API Key  before continuing with the installation procedure. They are required to uniquely identify the Merchant and provide a secure link. If you don't have either of these, please contact  support@oxipay.com.au   The plugin can be installed via CubeCart's Admin Control Panel, either manually or automatically using a Token. This section details how to upload the plugin, and install and configure its various parameters for it to work properly.  \n  If you have trouble accessing your CubeCart's Admin Control Panel, please consult CubeCart's official  knowledgebase  and  forums , or your IT department to resolve the issue.", 
            "title": "Installing Oxipay"
        }, 
        {
            "location": "/platforms/cubecart/#automatic-installation-using-token", 
            "text": "1  - Navigate to the following URL.  https://www.cubecart.com/extensions/payment-gateways/oxipay  2  - Select the  lightning bolt  button, next to your required Oxipay plugin version, to reveal the  Auto Install/Upgrade Token   3  - Copy the  Token  from within the pop-up.   4  - Log into the CubeCart Admin Control Panel as an Administrator.   5  - Once logged in, you will be presented with your Store's dashboard. From the side menu that appears to the left, scroll to the  Extensions  section and select  Manage Extensions .   6  - Copy the  Auto Install/Upgrade Token  into the Token field on the  Manage Extensions  page and select the  Go  button.   7  - If the module has been installed correctly, the module will appear in the list of  Available Extensions .   \nIf the automatic installation is not successful, you will be presented with a message at the top of the page similar to the screenshot below. If this continues to be a problem, please refer to the  Manual Installation  procedure.", 
            "title": "Automatic Installation using Token"
        }, 
        {
            "location": "/platforms/cubecart/#manual-installation", 
            "text": "1  - Navigate to the following URL.  https://www.cubecart.com/extensions/payment-gateways/oxipay  2  - Select the  download  button , next to your required Oxipay plugin version, to download the Oxipay plugin ZIP file.   3  - Extract the ZIP file and copy the contents to the  modules/gateway  folder of your server\u2019s/site directory.  4  - Ensure the folders/files have adequate read/write permissions set.  5  - Log into the CubeCart Admin Control Panel as an Administrator.   6  - Once logged in, you will be presented with your Store's dashboard. From the side menu that appears to the left, scroll to the  Extensions  section and select  Manage Extensions .   7  - If the module has been installed correctly, the module will appear in the list of  Available Extensions .", 
            "title": "Manual Installation"
        }, 
        {
            "location": "/platforms/cubecart/#configuring-oxipay", 
            "text": "This section describes the  Module Settings  available once you have installed the Oxipay plugin. This includes the Oxipay endpoints to communicate with, as well as whether or not to enable Test Mode.    1  - Log into the CubeCart Admin Control Panel as an Administrator.  2  - Once logged in, you will be presented with your Store's dashboard. From the side menu that appears to the left, scroll to the  Extensions  section and select  Manage Extensions .  3  - Under the  Available Extensions  section, select the text  OxiPay  to configure the module settings. Descriptions of the options are listed below.   \n  We have intentionally masked the  Merchant ID  and  API Key  in this support document. Please contact us and we will advise you of the settings to use.     Status  This must be enabled for the payment options to appear during checkout.    Priority   If you have more than one payment gateway, please use this field to define the order they are shown in. A setting of '1' will show it first, '2' second, etc.    Scope  This allows you to specify whether you want the Oxipay plugin to be available via the Main Website only or the Mobile Website only, or both.    Default  This must be enabled if you would like Oxipay pre-selected for the Customer as the default payment option.    Merchant ID  This is the Oxipay Merchant ID that you are provided with as part of your on-boarding when signing-up for Oxipay.    API Key  The API Key or the Encryption key is a case-sensitive alpha-numeric sequence that is used to authenticate payment requests originating from your Store. It is vital that you protect it and don't provide it to unauthorised individuals.    Test Mode  Indicates whether to process payments over the live Oxipay Gateway URL resulting in real transactions, or to process it over the Oxipay Sandbox Gateway URL which will produce simulated (test) transactions with no real dollar amounts being debited. By default it should be set to  No  unless we are attempting to diagnose issues on your store to do with Oxipay, or you're testing integrating the plugin with your online CubeCart store.    Test Gateway URL  This specifies the test Oxipay end-point that the plugin would need to communicate with when  Test Mode  is enabled. This is mainly used for troubleshooting purposes, particularly if we want to simulate test transactions on your CubeCart Store without having real dollar amounts debited from Credit Cards.    Gateway URL  This specifies the live Oxipay end-point that the plugin would need to communicate with for it to be able to process payments via Oxipay. Note that transactions processed over this URL are real transactions that end up in real dollar amounts being deducted.     4  - Once you have finished making the necessary configuration changes, click the  Save  button.  5  -  Australia  will be automatically set as an  Enabled Region  in the  Allowed Zones  tab. This must match the Country set in the CubeCart Store Settings.", 
            "title": "Configuring Oxipay"
        }, 
        {
            "location": "/platforms/cubecart/#upgrading-oxipay", 
            "text": "", 
            "title": "Upgrading Oxipay"
        }, 
        {
            "location": "/platforms/cubecart/#automatic-upgrade", 
            "text": "Importantly, when you perform an automatic upgrade, all the module settings are retained.\nThat is, you do not need to type in your  Merchant ID  and  API Key  again.  1  - Navigate to the following URL.  https://www.cubecart.com/extensions/payment-gateways/oxipay  2  - Select the  lightning bolt  button, next to your required Oxipay plugin version, to reveal the  Auto Install/Upgrade Token   3  - Copy the  Token  from within the pop-up.   4  - Log into the CubeCart Admin Control Panel as an Administrator.   5  - Once logged in, you will be presented with your Store's dashboard. From the side menu that appears to the left, scroll to the  Extensions  section and select  Manage Extensions .   6  - Copy the  Auto Install/Upgrade Token  into the Token field on the  Manage Extensions  page.   7  - If you enable the option to  Backup if already exists , a backup of the previous plugin version will be created.  8  - Select the  Go  button to complete the upgrade.", 
            "title": "Automatic Upgrade"
        }, 
        {
            "location": "/platforms/cubecart/#manual-upgrade", 
            "text": "Prior to manually upgrading, you will first need to un-install the previous version.", 
            "title": "Manual Upgrade"
        }, 
        {
            "location": "/platforms/cubecart/#un-installing-oxipay", 
            "text": "1  - Log into the CubeCart Admin Control Panel as an Administrator.   2  - Once logged in, you will be presented with your Store's dashboard. From the side menu that appears to the left, scroll to the  Extensions  section and select  Manage Extensions .   3  - In the list of  Available Extensions , select the  delete  button associated with the  Oxipay  extension.  4  - If the module has been un-installed correctly, the module will no longer appear in the list of  Available Extensions .   5  - You can now download the new version of the Oxipay CubeCart plugin and install it as per the instructions in the  Installing Oxipay  section of this document.", 
            "title": "Un-installing Oxipay"
        }, 
        {
            "location": "/developer_resources/introduction/", 
            "text": "Introduction\n\n\nThis section provides information on how a developer can go about integrating Oxipay into a shopping cart that allows for external payment gateways. We have successfully used this API ourselves to integrate Oxipay as a payment option into a number of leading shopping cart platforms and eCommerce solutions including Shopify, WooCommerce and Magento.\n\n\nShopping carts vary in the way they deal with transaction information, the way they communicate such information, and how they classify certain bits of information as either optional or mandatory. To deal with these differences Oxipay exposes an API that is intended to work with as many shopping carts as possible (regardless of how they are implemented - SAAS vs Plugin architecture, or the programming language used).\n\n\nIn this guide, you will find instructions about the information you need to provide to Oxipay, as well as the formatting we expect this information to be in. You will also find information on how to go about signing your request in order to protect against malicious attacks as well as session hijacking.\n\n\nNOTE\n this guide assumes prior knowledge and familiarity with the shopping cart that Oxipay is to be integrated into. We understand that shopping carts vary in the way they are designed e.g. SAAS (Shopify) vs Plugin architecture (WooCommerce). You should still be able to integrate Oxipay into your choice of shopping cart regardless of these differences.", 
            "title": "Introduction"
        }, 
        {
            "location": "/developer_resources/introduction/#introduction", 
            "text": "This section provides information on how a developer can go about integrating Oxipay into a shopping cart that allows for external payment gateways. We have successfully used this API ourselves to integrate Oxipay as a payment option into a number of leading shopping cart platforms and eCommerce solutions including Shopify, WooCommerce and Magento.  Shopping carts vary in the way they deal with transaction information, the way they communicate such information, and how they classify certain bits of information as either optional or mandatory. To deal with these differences Oxipay exposes an API that is intended to work with as many shopping carts as possible (regardless of how they are implemented - SAAS vs Plugin architecture, or the programming language used).  In this guide, you will find instructions about the information you need to provide to Oxipay, as well as the formatting we expect this information to be in. You will also find information on how to go about signing your request in order to protect against malicious attacks as well as session hijacking.  NOTE  this guide assumes prior knowledge and familiarity with the shopping cart that Oxipay is to be integrated into. We understand that shopping carts vary in the way they are designed e.g. SAAS (Shopify) vs Plugin architecture (WooCommerce). You should still be able to integrate Oxipay into your choice of shopping cart regardless of these differences.", 
            "title": "Introduction"
        }, 
        {
            "location": "/developer_resources/checkout_process/", 
            "text": "Checkout Process\n\n\nBelow is a chart that summarises the flow of a transaction when processing it using Oxipay.\n\n\n\n\nNOTE:\n We have included a sample cURL script that you can use to test the Oxipay sandbox endpoint. You can find the script under \nSample cURL Script\n\n\nStep 1\n: The customer places an order in a shopping cart providing details such as their first/last name, email address etc. The customer chooses Oxipay as the payment method.\n\n\nStep 2\n: The customer is redirected to the Oxipay checkout endpoint via a \nHTTP POST\n (See \nRequest POST\n for details). Note that this post needs to be signed to ensure security (See \nSignature Generation\n for details).\n\n\nStep 3\n: The customer will then complete the purchase via the Oxipay Service. Customers that cancel will be redirected back to the \nx_url_cancel\n URL.\n\n\nStep 4\n: Once a decision has been reached ('Approved' or 'Declined'), Oxipay will \nPOST\n (Server to Server) to the provided \nx_url_callback\n URL  (See \nResponse POST\n content).  \n\n\nStep 5\n: The customer is then presented with an 'Approved' or 'Declined' page.  The customer is then redirected (\nGET\n) to the provided \nx_url_complete\n with the same \nresponse\n content as used in \nStep 4\n.  \n\n\nStep 6\n: The transaction is now complete from Oxipay side as well as the client's and shopping cart's point of views.", 
            "title": "Checkout Process"
        }, 
        {
            "location": "/developer_resources/checkout_process/#checkout-process", 
            "text": "Below is a chart that summarises the flow of a transaction when processing it using Oxipay.   NOTE:  We have included a sample cURL script that you can use to test the Oxipay sandbox endpoint. You can find the script under  Sample cURL Script  Step 1 : The customer places an order in a shopping cart providing details such as their first/last name, email address etc. The customer chooses Oxipay as the payment method.  Step 2 : The customer is redirected to the Oxipay checkout endpoint via a  HTTP POST  (See  Request POST  for details). Note that this post needs to be signed to ensure security (See  Signature Generation  for details).  Step 3 : The customer will then complete the purchase via the Oxipay Service. Customers that cancel will be redirected back to the  x_url_cancel  URL.  Step 4 : Once a decision has been reached ('Approved' or 'Declined'), Oxipay will  POST  (Server to Server) to the provided  x_url_callback  URL  (See  Response POST  content).    Step 5 : The customer is then presented with an 'Approved' or 'Declined' page.  The customer is then redirected ( GET ) to the provided  x_url_complete  with the same  response  content as used in  Step 4 .    Step 6 : The transaction is now complete from Oxipay side as well as the client's and shopping cart's point of views.", 
            "title": "Checkout Process"
        }, 
        {
            "location": "/developer_resources/api_reference/", 
            "text": "API Reference\n\n\nCommunicating with Oxipay in order to process a transaction via our payment gateway involves \nPOST\ning a request to the Oxipay endpoint. This can be viewed as an authorisation request that is performed by the shopping cart in order to process the payment via Oxipay.\n\n\nThere are two Oxipay endpoints that transaction information can be posted to and they represent the live Oxipay payment gateway and the test (sandbox) gateway.\n\n\nOxipay Endpoints\n\n\nPosting a request to the live payment gateway with the \nx_test\n set to \nfalse\n will process a real transaction. This means the credit card that was used as part of the checkout process will be debited. On the other hand, posting to the test gateway simulates a transaction and is not processed as a real transaction; that is, no real dollar amount will be debited from the specified credit card.\n\n\nTo test Oxipay, you can use the test (sandbox) URL or you can use the live payment gateway with the testing flag enabled \nx_test = true\n. \nTest transactions will not incur any debits, and any credit card details will not be stored.\n\n\n\n\n\n\n\n\nOxipay Environment\n\n\nURL\n\n\n\n\n\n\n\n\n\n\nProduction Endpoint\n\n\nhttps://secure.oxipay.com.au/Checkout?platform=Default\n\n\n\n\n\n\nSandbox Endpoint\n\n\nhttps://securesandbox.oxipay.com.au/Checkout?platform=Default\n\n\n\n\n\n\n\n\n\n\nRequest POST\n\n\nPosting to the Oxipay endpoint, regardless of whether this is done in the live or test environment, should be done using the format \napplication/x-www-form-urlencoded\n. Please note that Oxipay adopts the convention of prefixing the various key names with \nx_\n .\n\n\nBelow is an overview of the various key-value pairs that can be passed to Oxipay (\nRequest Values\n), a description of what they are as well as an indication of whether they are mandatory or optional.\n\n\nRequest values\n\n\n\n\n\n\n\n\nKey\n\n\nDescription\n\n\nType\n\n\nExample\n\n\n\n\n\n\n\n\n\n\nx_account_id \nRequired\n\n\nThis is a unique Merchant ID that is assigned by Oxipay to individual merchants\n\n\nunicode string\n\n\n123456\n\n\n\n\n\n\nx_amount \nRequired\n\n\nRepresents the transaction's total amount including any taxes and shipping costs\n\n\ndecimal\n\n\n99.90\n\n\n\n\n\n\nx_currency \nRequired\n\n\nCurrency of the transaction\n\n\nISO-4217\n\n\nAUD\n\n\n\n\n\n\nx_customer_billing_address1\n\n\nBilling address line 1\n\n\nunicode string\n\n\n97 Pirie St\n\n\n\n\n\n\nx_customer_billing_address2\n\n\nBilling address line 2\n\n\nunicode string\n\n\nLevel 6\n\n\n\n\n\n\nx_customer_billing_city\n\n\nBilling city\n\n\nunicode string\n\n\nAdelaide\n\n\n\n\n\n\nx_customer_billing_country\n\n\nBilling country\n\n\niso-3166-1 alpha-2\n\n\nAU\n\n\n\n\n\n\nx_customer_billing_state\n\n\nBilling state\n\n\nunicode string\n\n\nSA\n\n\n\n\n\n\nx_customer_billing_postcode\n\n\nBilling postcode\n\n\nunicode string\n\n\n5000\n\n\n\n\n\n\nx_customer_email\n\n\nBilling email address\n\n\nunicode string\n\n\ndummy@gmail.com\n\n\n\n\n\n\nx_customer_first_name\n\n\nCustomer's first name\n\n\nunicode string\n\n\nJohn\n\n\n\n\n\n\nx_customer_last_name\n\n\nCustomer's last name\n\n\nunicode string\n\n\nAppleseed\n\n\n\n\n\n\nx_customer_phone\n\n\nCustomer's phone number\n\n\nunicode string\n\n\n0400 000 000\n\n\n\n\n\n\nx_customer_shipping_address1\n\n\nShipping address line 1\n\n\nunicode string\n\n\n97 Pirie St\n\n\n\n\n\n\nx_customer_shipping_address2\n\n\nShipping address line 2\n\n\nunicode string\n\n\nLevel 6\n\n\n\n\n\n\nx_customer_shipping_city\n\n\nShipping city\n\n\nunicode string\n\n\nAdelaide\n\n\n\n\n\n\nx_customer_shipping_country\n\n\nShipping country\n\n\nunicode string\n\n\nAU\n\n\n\n\n\n\nx_customer_shipping_first_name\n\n\nCustomer's first name (Shipping)\n\n\nunicode string\n\n\nJohn\n\n\n\n\n\n\nx_customer_shipping_last_name\n\n\nCustomer's last name (Shipping)\n\n\nunicode string\n\n\nAppleseed\n\n\n\n\n\n\nx_customer_shipping_phone\n\n\nCustomer's phone number (Shipping)\n\n\nunicode string\n\n\n0400 000 000\n\n\n\n\n\n\nx_customer_shipping_state\n\n\nShipping state\n\n\nunicode string\n\n\nSA\n\n\n\n\n\n\nx_customer_shipping_postcode\n\n\nShipping postcode\n\n\nunicode string\n\n\n5000\n\n\n\n\n\n\nx_description\n\n\nItem's description as setup in the shopping cart\n\n\nunicode string\n\n\nOrder #767\n\n\n\n\n\n\nx_reference \nRequired\n\n\nA reference that uniquely references the order and assigned by the merchant. This is unique to the shopping cart.\n\n\nascii string (max length 36 bytes)\n\n\n19783\n\n\n\n\n\n\nx_shop_country \nRequired\n\n\nCountry of where the merchant's store is located\n\n\niso-3166-1alpha-2\n\n\nAU\n\n\n\n\n\n\nx_shop_name \nRequired\n\n\nStore name as advertised on the internet, TV and other media\n\n\nShop Inc\n\n\n\n\n\n\n\n\nx_signature \nRequired\n\n\nRequest payload that is signed/verified using HMAC-SHA256\n\n\nhex string, case-insensitive\n\n\nSee \nSignature Generation\n\n\n\n\n\n\nx_test \nRequired\n\n\nIndicates whether the transaction is to be processed using the live or test Oxipay endpoint\n\n\ntrue/false\n\n\ntrue\n\n\n\n\n\n\nx_url_callback \nRequired\n\n\nCallback notifications are sent asynchronously to this URL\n\n\nURL\n\n\nshop.com.au/callback\n\n\n\n\n\n\nx_url_cancel \nRequired\n\n\nCustomers are redirected to this URL if they want to quit their Oxipay transaction and return to the shopping cart store instead\n\n\nURL\n\n\nshop.com.au/cancel\n\n\n\n\n\n\nx_url_complete \nRequired\n\n\nCustomers are redirected to this URL if they have successfully processed their transaction using Oxipay\n\n\nURL\n\n\nshop.com.au/compete\n\n\n\n\n\n\n\n\nSample POST\n\n\nBelow is a sample request that might be posted to an Oxipay endpoint that is in the \napplication/x-www-form-urlencoded\n format. In this example, please ignore values for individual keys - such as the value for \nx_signature\n - since this sample POST is for demonstration purposes only and does not demonstrate a real transaction that can be completed by Oxipay.\n\n\n\n\n\nx_reference=123\nx_account_id=1\nx_amount=100.00\nx_currency=AUD\nx_url_callback=sample_callback_url\nx_url_complete=sample_complete_url\nx_shop_country=AU\nx_shop_name=Sample+Shop\nx_test=true\nx_customer_first_name=first\nx_customer_last_name=last\nx_customer_email=sample%40email.com\nx_customer_billing_country=AU\nx_customer_billing_city=Adelaide\nx_customer_billing_address1=97+Pirie\nx_customer_billing_address2=St\nx_customer_billing_state=SA\nx_customer_billing_zip=5000\nx_invoice=%123\n\nx_description=Sample+Store+-+%123\nx_url_cancel=sample_cancel_url\nx_signature=dummy_signature\n\n\n\n\n\n\n\nPOST and GET responses\n\n\nThere are two responses from Oxipay.\n\n\nThe first response that Oxipay always performs is a server-to-server asynchronous POST to the shopping cart on the endpoint specified in the \nx_url_callback\n and in the format \napplication/x-www-form-urlencoded\n. Similar to the request POST, the response POST includes key-values pairs that are specific to that transaction and indicate things such as the outcome of that particular transaction if it has failed or is completed successfully for instance.\n\n\nThe second response is a HTTP GET to the client on either of the URLs specified in \nx_url_complete\n or \nx_url_cancel\n.\n\n\nResponse POST values\n\n\nBelow is an overview of the various response key-value pairs that Oxipay returns after it has finished processing a transaction. Note that some of these key-value pairs echo corresponding key-value pairs in the request that Oxipay receives - as is the case with \nx_currency\n for instance.\n\n\n\n\n\n\n\n\nKey\n\n\nDescription\n\n\nType\n\n\nExample\n\n\n\n\n\n\n\n\n\n\nx_account_id\n\n\nThis is the Merchant ID assigned by Oxipay to the merchant\n\n\nunicode string\n\n\n123456\n\n\n\n\n\n\nx_reference\n\n\nA reference that uniquely references the order and assigned by the merchant\n\n\nascii string\n\n\n19783\n\n\n\n\n\n\nx_currency\n\n\nCurrency of the transaction\n\n\nISO-4217\n\n\nAUD\n\n\n\n\n\n\nx_test\n\n\nIndicates whether the transaction is to be processed as a live or a test transaction\n\n\nTrue/False\n\n\nFalse\n\n\n\n\n\n\nx_amount\n\n\nRepresents the transaction's total amount including any taxes and shipping costs\n\n\ndecimal\n\n\n99.90\n\n\n\n\n\n\nx_gateway_reference\n\n\nA reference for the authorisation issues by Oxipay that is unique\n\n\nunique string\n\n\n123\n\n\n\n\n\n\nx_timestamp\n\n\nTime at which the transaction is completed, in UTC format YYYY-MM-DDTHH:MM:SSZ\n\n\niso-8601 in UTC\n\n\n2017-06-24T12:11:43Z\n\n\n\n\n\n\nx_result\n\n\nValues that represent the outcome of a transaction\n\n\nValid values are \ncompleted\n, \nfailed\n and \npending\n\n\nfailed", 
            "title": "API Reference"
        }, 
        {
            "location": "/developer_resources/api_reference/#api-reference", 
            "text": "Communicating with Oxipay in order to process a transaction via our payment gateway involves  POST ing a request to the Oxipay endpoint. This can be viewed as an authorisation request that is performed by the shopping cart in order to process the payment via Oxipay.  There are two Oxipay endpoints that transaction information can be posted to and they represent the live Oxipay payment gateway and the test (sandbox) gateway.", 
            "title": "API Reference"
        }, 
        {
            "location": "/developer_resources/api_reference/#oxipay-endpoints", 
            "text": "Posting a request to the live payment gateway with the  x_test  set to  false  will process a real transaction. This means the credit card that was used as part of the checkout process will be debited. On the other hand, posting to the test gateway simulates a transaction and is not processed as a real transaction; that is, no real dollar amount will be debited from the specified credit card.  To test Oxipay, you can use the test (sandbox) URL or you can use the live payment gateway with the testing flag enabled  x_test = true . \nTest transactions will not incur any debits, and any credit card details will not be stored.     Oxipay Environment  URL      Production Endpoint  https://secure.oxipay.com.au/Checkout?platform=Default    Sandbox Endpoint  https://securesandbox.oxipay.com.au/Checkout?platform=Default", 
            "title": "Oxipay Endpoints"
        }, 
        {
            "location": "/developer_resources/api_reference/#request-post", 
            "text": "Posting to the Oxipay endpoint, regardless of whether this is done in the live or test environment, should be done using the format  application/x-www-form-urlencoded . Please note that Oxipay adopts the convention of prefixing the various key names with  x_  .  Below is an overview of the various key-value pairs that can be passed to Oxipay ( Request Values ), a description of what they are as well as an indication of whether they are mandatory or optional.", 
            "title": "Request POST"
        }, 
        {
            "location": "/developer_resources/api_reference/#request-values", 
            "text": "Key  Description  Type  Example      x_account_id  Required  This is a unique Merchant ID that is assigned by Oxipay to individual merchants  unicode string  123456    x_amount  Required  Represents the transaction's total amount including any taxes and shipping costs  decimal  99.90    x_currency  Required  Currency of the transaction  ISO-4217  AUD    x_customer_billing_address1  Billing address line 1  unicode string  97 Pirie St    x_customer_billing_address2  Billing address line 2  unicode string  Level 6    x_customer_billing_city  Billing city  unicode string  Adelaide    x_customer_billing_country  Billing country  iso-3166-1 alpha-2  AU    x_customer_billing_state  Billing state  unicode string  SA    x_customer_billing_postcode  Billing postcode  unicode string  5000    x_customer_email  Billing email address  unicode string  dummy@gmail.com    x_customer_first_name  Customer's first name  unicode string  John    x_customer_last_name  Customer's last name  unicode string  Appleseed    x_customer_phone  Customer's phone number  unicode string  0400 000 000    x_customer_shipping_address1  Shipping address line 1  unicode string  97 Pirie St    x_customer_shipping_address2  Shipping address line 2  unicode string  Level 6    x_customer_shipping_city  Shipping city  unicode string  Adelaide    x_customer_shipping_country  Shipping country  unicode string  AU    x_customer_shipping_first_name  Customer's first name (Shipping)  unicode string  John    x_customer_shipping_last_name  Customer's last name (Shipping)  unicode string  Appleseed    x_customer_shipping_phone  Customer's phone number (Shipping)  unicode string  0400 000 000    x_customer_shipping_state  Shipping state  unicode string  SA    x_customer_shipping_postcode  Shipping postcode  unicode string  5000    x_description  Item's description as setup in the shopping cart  unicode string  Order #767    x_reference  Required  A reference that uniquely references the order and assigned by the merchant. This is unique to the shopping cart.  ascii string (max length 36 bytes)  19783    x_shop_country  Required  Country of where the merchant's store is located  iso-3166-1alpha-2  AU    x_shop_name  Required  Store name as advertised on the internet, TV and other media  Shop Inc     x_signature  Required  Request payload that is signed/verified using HMAC-SHA256  hex string, case-insensitive  See  Signature Generation    x_test  Required  Indicates whether the transaction is to be processed using the live or test Oxipay endpoint  true/false  true    x_url_callback  Required  Callback notifications are sent asynchronously to this URL  URL  shop.com.au/callback    x_url_cancel  Required  Customers are redirected to this URL if they want to quit their Oxipay transaction and return to the shopping cart store instead  URL  shop.com.au/cancel    x_url_complete  Required  Customers are redirected to this URL if they have successfully processed their transaction using Oxipay  URL  shop.com.au/compete", 
            "title": "Request values"
        }, 
        {
            "location": "/developer_resources/api_reference/#sample-post", 
            "text": "Below is a sample request that might be posted to an Oxipay endpoint that is in the  application/x-www-form-urlencoded  format. In this example, please ignore values for individual keys - such as the value for  x_signature  - since this sample POST is for demonstration purposes only and does not demonstrate a real transaction that can be completed by Oxipay.   \nx_reference=123 x_account_id=1 x_amount=100.00 x_currency=AUD x_url_callback=sample_callback_url x_url_complete=sample_complete_url x_shop_country=AU x_shop_name=Sample+Shop x_test=true x_customer_first_name=first x_customer_last_name=last x_customer_email=sample%40email.com x_customer_billing_country=AU x_customer_billing_city=Adelaide x_customer_billing_address1=97+Pirie x_customer_billing_address2=St x_customer_billing_state=SA x_customer_billing_zip=5000 x_invoice=%123 x_description=Sample+Store+-+%123 x_url_cancel=sample_cancel_url x_signature=dummy_signature", 
            "title": "Sample POST"
        }, 
        {
            "location": "/developer_resources/api_reference/#post-and-get-responses", 
            "text": "There are two responses from Oxipay.  The first response that Oxipay always performs is a server-to-server asynchronous POST to the shopping cart on the endpoint specified in the  x_url_callback  and in the format  application/x-www-form-urlencoded . Similar to the request POST, the response POST includes key-values pairs that are specific to that transaction and indicate things such as the outcome of that particular transaction if it has failed or is completed successfully for instance.  The second response is a HTTP GET to the client on either of the URLs specified in  x_url_complete  or  x_url_cancel .", 
            "title": "POST and GET responses"
        }, 
        {
            "location": "/developer_resources/api_reference/#response-post-values", 
            "text": "Below is an overview of the various response key-value pairs that Oxipay returns after it has finished processing a transaction. Note that some of these key-value pairs echo corresponding key-value pairs in the request that Oxipay receives - as is the case with  x_currency  for instance.     Key  Description  Type  Example      x_account_id  This is the Merchant ID assigned by Oxipay to the merchant  unicode string  123456    x_reference  A reference that uniquely references the order and assigned by the merchant  ascii string  19783    x_currency  Currency of the transaction  ISO-4217  AUD    x_test  Indicates whether the transaction is to be processed as a live or a test transaction  True/False  False    x_amount  Represents the transaction's total amount including any taxes and shipping costs  decimal  99.90    x_gateway_reference  A reference for the authorisation issues by Oxipay that is unique  unique string  123    x_timestamp  Time at which the transaction is completed, in UTC format YYYY-MM-DDTHH:MM:SSZ  iso-8601 in UTC  2017-06-24T12:11:43Z    x_result  Values that represent the outcome of a transaction  Valid values are  completed ,  failed  and  pending  failed", 
            "title": "Response POST values"
        }, 
        {
            "location": "/developer_resources/sample_curl/", 
            "text": "Sample cURL Script\n\n\nBelow is a sample cURL script that you can use to test the Oxipay test (sandbox) endpoint.\n\n\n\n\n\ncurl 'https://securesandbox.oxipay.com.au/Checkout?platform=Default'  -H 'Content-Type: application/x-www-form-urlencoded' -X POST -d 'x_account_id=30199250\nx_currency=AUD\nx_amount=89\nx_reference=9051364487\nx_shop_country=AU\nx_shop_name=Example+Store\nx_transaction_type=\nx_description=Tim%27s+Pet+Store\nx_invoice=239051364487\nx_test=true\nx_customer_first_name=John\nx_customer_last_name=Citizen\nx_customer_email=john.citizen%40example.com\nx_customer_billing_address1=some+address\nx_customer_billing_address2=\nx_customer_billing_city=Sydney\nx_customer_billing_state=NSW\nx_customer_billing_zip=2000\nx_url_callback=http%3A%2F%2Fexample.com%2Fcallback.php\nx_url_cancel=http%3A%2F%2Fexample.com%2Fcart.php\nx_url_complete=http%3A%2F%2Fexample.com%2Fcomplete.php\nx_signature=46017adf3644b9e1530f137009935a70aa0430b69750538de0878937c3eebe17'", 
            "title": "Sample cURL Script"
        }, 
        {
            "location": "/developer_resources/sample_curl/#sample-curl-script", 
            "text": "Below is a sample cURL script that you can use to test the Oxipay test (sandbox) endpoint.   \ncurl 'https://securesandbox.oxipay.com.au/Checkout?platform=Default'  -H 'Content-Type: application/x-www-form-urlencoded' -X POST -d 'x_account_id=30199250 x_currency=AUD x_amount=89 x_reference=9051364487 x_shop_country=AU x_shop_name=Example+Store x_transaction_type= x_description=Tim%27s+Pet+Store x_invoice=239051364487 x_test=true x_customer_first_name=John x_customer_last_name=Citizen x_customer_email=john.citizen%40example.com x_customer_billing_address1=some+address x_customer_billing_address2= x_customer_billing_city=Sydney x_customer_billing_state=NSW x_customer_billing_zip=2000 x_url_callback=http%3A%2F%2Fexample.com%2Fcallback.php x_url_cancel=http%3A%2F%2Fexample.com%2Fcart.php x_url_complete=http%3A%2F%2Fexample.com%2Fcomplete.php x_signature=46017adf3644b9e1530f137009935a70aa0430b69750538de0878937c3eebe17'", 
            "title": "Sample cURL Script"
        }, 
        {
            "location": "/developer_resources/signature_generation/", 
            "text": "Signature Generation\n\n\nIn order to prevent against malicious attacks and hijacking of browser sessions,  Oxipay implements a signing mechanism based on HMAC-SHA256. This section provides information on how you can use HMAC-SHA256 for signing and verification purposes.\n\n\nAs mentioned, Oxipay uses HMAC-SHA256 for purposes of signing and verifying requests.\n\n\nBelow is an example that demonstrates how you can go about implementing a method in a shopping platform that is based on PHP to generate the signature.\n\n\nPHP Example\n\n\nBelow is a PHP code snippet that demonstrates how a signature might be generated in the context of Oxipay:\n\n\n    function oxipay_sign($query, $api_key )\n    {\n        $clear_text = '';\n        ksort($query);\n        foreach ($query as $key =\n $value) {\n            if (substr($key, 0, 2) === \nx_\n) {\n                $clear_text .= $key . $value;\n            }\n        }\n        $hash = hash_hmac( \nsha256\n, $clear_text, $api_key);\n        return str_replace('-', '', $hash);\n    }\n\n\n\n\nFirst note that the method expects two parameters and they are \n$query\n and \n$api_key\n. The \n$query\n represents the various key-value pairs that form your HTTP request POST and vary depending on the information that is entered as part of the checkout process on your shopping cart.\n\n\nThe parameter \n$api_key\n represents the API Key that is unique for every merchant. It should only change once the API key has been changed on the Oxipay side.\n\n\nHaving received the two parameters, the \noxipay_sign\n method will then perform an alphabetical sorting of the various key-value pairs based on the key but still maintaining the correlation between the keys and their respective values.\n\n\nThe method will then examine the \n$query\n variable for the various key-value pairs by checking for the \nx_\n prefix and would then append them together.\n\n\nThe method then computes the keyed hash value using the \nhash_hmac\n method.", 
            "title": "Signature Generation"
        }, 
        {
            "location": "/developer_resources/signature_generation/#signature-generation", 
            "text": "In order to prevent against malicious attacks and hijacking of browser sessions,  Oxipay implements a signing mechanism based on HMAC-SHA256. This section provides information on how you can use HMAC-SHA256 for signing and verification purposes.  As mentioned, Oxipay uses HMAC-SHA256 for purposes of signing and verifying requests.  Below is an example that demonstrates how you can go about implementing a method in a shopping platform that is based on PHP to generate the signature.", 
            "title": "Signature Generation"
        }, 
        {
            "location": "/developer_resources/signature_generation/#php-example", 
            "text": "Below is a PHP code snippet that demonstrates how a signature might be generated in the context of Oxipay:      function oxipay_sign($query, $api_key )\n    {\n        $clear_text = '';\n        ksort($query);\n        foreach ($query as $key =  $value) {\n            if (substr($key, 0, 2) ===  x_ ) {\n                $clear_text .= $key . $value;\n            }\n        }\n        $hash = hash_hmac(  sha256 , $clear_text, $api_key);\n        return str_replace('-', '', $hash);\n    }  First note that the method expects two parameters and they are  $query  and  $api_key . The  $query  represents the various key-value pairs that form your HTTP request POST and vary depending on the information that is entered as part of the checkout process on your shopping cart.  The parameter  $api_key  represents the API Key that is unique for every merchant. It should only change once the API key has been changed on the Oxipay side.  Having received the two parameters, the  oxipay_sign  method will then perform an alphabetical sorting of the various key-value pairs based on the key but still maintaining the correlation between the keys and their respective values.  The method will then examine the  $query  variable for the various key-value pairs by checking for the  x_  prefix and would then append them together.  The method then computes the keyed hash value using the  hash_hmac  method.", 
            "title": "PHP Example"
        }, 
        {
            "location": "/developer_resources/test_credit_card_numbers/", 
            "text": "Test Credit Card Numbers\n\n\nDue to PCI DSS compliance \nonly the following credit card numbers are able to be used in the secure test environment\n, all other cards will result in a decline.\n\n\nAccepted Numbers\n\n\n\n\n\n\n\n\nType\n\n\nPAN\n\n\nCountries Available\n\n\nAU Result\n\n\nNZ Result\n\n\n\n\n\n\n\n\n\n\nVISA\n\n\n4242 4242 4242 4242\n\n\nAU, NZ\n\n\nAlways approves\n\n\nAlways approves\n\n\n\n\n\n\nVISA\n\n\n4111 1111 1111 1111\n\n\nAU Only\n\n\nAlways approves\n\n\nN/A\n\n\n\n\n\n\nVISA\n\n\n4564 8099 9999 9992\n\n\nAU, NZ\n\n\nAlways approves\n\n\nDynamic \nsee below\n\n\n\n\n\n\nVISA\n\n\n4564 4564 4564 4564\n\n\nAU, NZ\n\n\nAlways approves\n\n\nDynamic \nsee below\n\n\n\n\n\n\nMASTERCARD\n\n\n5506 7500 0000 4364\n\n\nAU, NZ\n\n\nAlways approves\n\n\nAlways approves\n\n\n\n\n\n\nMASTERCARD\n\n\n5430 4899 9999 9992\n\n\nAU, NZ\n\n\nAlways approves\n\n\nDynamic \nsee below\n\n\n\n\n\n\nMASTERCARD\n\n\n5537 5010 1010 9112\n\n\nAU, NZ\n\n\nAlways approves\n\n\nDynamic \nsee below\n\n\n\n\n\n\n\n\nNZ CVV Values and Outcomes\n\n\nNZ allows some cards to dynamically return different test results. The following CVV values can be used against NZ to force certain test outcomes.\n\n\n\n\n\n\n\n\nCVV Code\n\n\nNZ Response Code\n\n\n\n\n\n\n\n\n\n\n100\n\n\nM (Matched)\n\n\n\n\n\n\n200\n\n\nN (Not Matched)\n\n\n\n\n\n\n300\n\n\nP (Not Processed)\n\n\n\n\n\n\n400\n\n\nS (Suspicious)\n\n\n\n\n\n\n500\n\n\nI (Issuer Not Registered)\n\n\n\n\n\n\nOther number\n\n\nU (Unsupported)", 
            "title": "Test Credit Card Numbers"
        }, 
        {
            "location": "/developer_resources/test_credit_card_numbers/#test-credit-card-numbers", 
            "text": "Due to PCI DSS compliance  only the following credit card numbers are able to be used in the secure test environment , all other cards will result in a decline.", 
            "title": "Test Credit Card Numbers"
        }, 
        {
            "location": "/developer_resources/test_credit_card_numbers/#accepted-numbers", 
            "text": "Type  PAN  Countries Available  AU Result  NZ Result      VISA  4242 4242 4242 4242  AU, NZ  Always approves  Always approves    VISA  4111 1111 1111 1111  AU Only  Always approves  N/A    VISA  4564 8099 9999 9992  AU, NZ  Always approves  Dynamic  see below    VISA  4564 4564 4564 4564  AU, NZ  Always approves  Dynamic  see below    MASTERCARD  5506 7500 0000 4364  AU, NZ  Always approves  Always approves    MASTERCARD  5430 4899 9999 9992  AU, NZ  Always approves  Dynamic  see below    MASTERCARD  5537 5010 1010 9112  AU, NZ  Always approves  Dynamic  see below", 
            "title": "Accepted Numbers"
        }, 
        {
            "location": "/developer_resources/test_credit_card_numbers/#nz-cvv-values-and-outcomes", 
            "text": "NZ allows some cards to dynamically return different test results. The following CVV values can be used against NZ to force certain test outcomes.     CVV Code  NZ Response Code      100  M (Matched)    200  N (Not Matched)    300  P (Not Processed)    400  S (Suspicious)    500  I (Issuer Not Registered)    Other number  U (Unsupported)", 
            "title": "NZ CVV Values and Outcomes"
        }, 
        {
            "location": "/guidelines/introduction/", 
            "text": "Placing Oxipay widgets on your website is a great way to introduce Oxipay to your users and drive more sales through your online store. The following documentation will guide you through the process of getting Oxipay widgets displayed on your website.\n\n\n\n  \n\n    \nWhat is a widget\n\n  \n\n  \n\n    In the context of this documentation, a widget is a banner or tag that will open a modal dialog (a.k.a. popup) when clicked. The content of the modal dialog can be any web-page.\n  \n\n\n\n\n\nWe strive to write good documentation for our merchants. If there is a way we can improve our documentation, please let us know through \nsupport@oxipay.com.au\n\n\n\n\n\n\nVersion 1.10", 
            "title": "Introduction"
        }, 
        {
            "location": "/guidelines/widgets/", 
            "text": "Register-interest large\n\n\n\n\nscript id=\noxipay-banner\n src=\nhttps://widgets.oxipay.com.au/content/scripts/register-interest-large.js\n/script\n\n\n\n\n\n\n\nRegister-interest small\n\n\n\n\nscript id=\noxipay-banner\n src=\nhttps://widgets.oxipay.com.au/content/scripts/register-interest-small.js\n/script\n\n\n\n\n\n\n\nMore-info large\n\n\n\n\nscript id=\noxipay-banner\n src=\nhttps://widgets.oxipay.com.au/content/scripts/more-info-large.js\n/script\n\n\n\n\n\n\n\nMore-info small\n\n\n\n\nscript id=\noxipay-banner\n src=\nhttps://widgets.oxipay.com.au/content/scripts/more-info-small.js\n/script\n\n\n\n\n\n\n\nPrice-info widget\n\n\n\n\nscript id=\noxipay-banner\n src=\nhttps://widgets.oxipay.com.au/content/scripts/price-info.js?productPrice=PlaceYourProductPrice\n/script\n\n\n\n\n\n\n\n\n  \n\n    \nInstallation based on Platforms\n\n  \n\n  \n\n\n\n  \nShopify specific instructions\n\n  \nWooCommerce specific instructions\n\n\n\n  \n\n\n\n\n\n\n\n*We reserve the right to change any linked image at anytime without prior notice\n\n\n\n\nWe strive to write good documentation for our merchants. If there is a way we can improve our documentation, please let us know through \nsupport@oxipay.com.au\n\n\n\n\n\n\nVersion 1.10", 
            "title": "List of widgets"
        }, 
        {
            "location": "/guidelines/widgets/#register-interest-large", 
            "text": "script id= oxipay-banner  src= https://widgets.oxipay.com.au/content/scripts/register-interest-large.js /script", 
            "title": "Register-interest large"
        }, 
        {
            "location": "/guidelines/widgets/#register-interest-small", 
            "text": "script id= oxipay-banner  src= https://widgets.oxipay.com.au/content/scripts/register-interest-small.js /script", 
            "title": "Register-interest small"
        }, 
        {
            "location": "/guidelines/widgets/#more-info-large", 
            "text": "script id= oxipay-banner  src= https://widgets.oxipay.com.au/content/scripts/more-info-large.js /script", 
            "title": "More-info large"
        }, 
        {
            "location": "/guidelines/widgets/#more-info-small", 
            "text": "script id= oxipay-banner  src= https://widgets.oxipay.com.au/content/scripts/more-info-small.js /script", 
            "title": "More-info small"
        }, 
        {
            "location": "/guidelines/widgets/#price-info-widget", 
            "text": "script id= oxipay-banner  src= https://widgets.oxipay.com.au/content/scripts/price-info.js?productPrice=PlaceYourProductPrice /script", 
            "title": "Price-info widget"
        }, 
        {
            "location": "/guidelines/installation/", 
            "text": "Adding a Widget to your Website\n\n\nStep 1:\n Choose the widget that you want to install from our \nWidgets list\n. \n\nStep 2:\n Place the \nscript\n tag in the desired place you'd like it to appear on your website.\n\nStep 3:\n Save and you should see a working widget on your website.\n\n\nWorking Example\n\n\n\n\nWe strive to write good documentation for our merchants. If there is a way we can improve our documentation, please let us know through \nsupport@oxipay.com.au\n\n\n\n\n\n\nVersion 1.10", 
            "title": "Generic Installation"
        }, 
        {
            "location": "/guidelines/installation/#adding-a-widget-to-your-website", 
            "text": "Step 1:  Choose the widget that you want to install from our  Widgets list .  Step 2:  Place the  script  tag in the desired place you'd like it to appear on your website. Step 3:  Save and you should see a working widget on your website.", 
            "title": "Adding a Widget to your Website"
        }, 
        {
            "location": "/guidelines/installation/#working-example", 
            "text": "We strive to write good documentation for our merchants. If there is a way we can improve our documentation, please let us know through  support@oxipay.com.au    Version 1.10", 
            "title": "Working Example"
        }, 
        {
            "location": "/price-info/shopify/", 
            "text": "Adding Shopify's Price-info Widget\n\n\nFor adding Price-info Widget to your Website, follow the instruction\n\n\nStep 1:\n Login into Shopify backend/Dashboard\n\n\nStep 2:\n Navigate to Online Store \n Themes \n\n\n\n\n\n\nStep 3:\n From top-right corner, select to Edit HTML/CSS\n\n\n\n\nStep 4:\n From left panel, navigate to Sections and select \u201cproduct-template.liquid\u201d\n\n\n\n\nStep 5:\n Place the \nscript\n tag in the desired place you'd like it to appear on your website. This should be added before \nAdd to Cart\n button tag.\n\n\nscript id=\noxipay-banner\n src=\n https://widgets.oxipay.com.au/content/scripts/price-info.js?productPrice={{current_variant.price | divided_by: 100.00}}\n/script\n\n\n\n\n\nStep 6:\n Save and you should see a working widget on your website.\n\n\n\n\n*We reserve the right to change any linked image at anytime without prior notice\n\n\n\n\nWe strive to write good documentation for our merchants. If there is a way we can improve our documentation, please let us know through \nsupport@oxipay.com.au\n\n\n\n\n\n\nVersion 1.10", 
            "title": "Shopify Specific"
        }, 
        {
            "location": "/price-info/shopify/#adding-shopifys-price-info-widget", 
            "text": "For adding Price-info Widget to your Website, follow the instruction  Step 1:  Login into Shopify backend/Dashboard  Step 2:  Navigate to Online Store   Themes     Step 3:  From top-right corner, select to Edit HTML/CSS   Step 4:  From left panel, navigate to Sections and select \u201cproduct-template.liquid\u201d   Step 5:  Place the  script  tag in the desired place you'd like it to appear on your website. This should be added before  Add to Cart  button tag.  script id= oxipay-banner  src=  https://widgets.oxipay.com.au/content/scripts/price-info.js?productPrice={{current_variant.price | divided_by: 100.00}} /script   Step 6:  Save and you should see a working widget on your website.   *We reserve the right to change any linked image at anytime without prior notice   We strive to write good documentation for our merchants. If there is a way we can improve our documentation, please let us know through  support@oxipay.com.au    Version 1.10", 
            "title": "Adding Shopify's Price-info Widget"
        }, 
        {
            "location": "/price-info/woocommerce/", 
            "text": "Adding WooCommerce's Price-info Widget\n\n\nFor adding Price-info Widget to your Website, follow the instruction\n\n\nStep 1:\n Find \nPrice.php\n from the following location in your hosting (Wordpress installed Folder) and open it with your desired text-editor \n\n\nYourWordpressFolder\\wp-content\\plugins\\woocommerce\\templates\\single-product\n\n\n\n\nStep 2:\n Find \"Price tag\" as shown below \n\n\np class=\nprice\n?php echo $product-\nget_price_html(); ?\n/p\n\n\n\n\n\nStep 3:\n Place the following \nscript\n tag below the \"Price tag\".\n\n\nscript id=\noxipay-banner\n src=\nhttps://widgets.oxipay.com.au/content/scripts/price-info.js?productPrice=\n?php echo $product-\nget_display_price() ?\n/script\n\n\n\n\n\nStep 4:\n Save and you should see a working widget on your website.\n\n\n\n\n\n\n\n  \nNote:\n If you are using a custom template for WooCommerce, \"Price.php\" will be located in \"yourtheme/woocommerce/single-product/price.php.\"\n\n\n\n\n\n**We reserve the right to change any linked image at anytime without prior notice\n\n\n\n\nWe strive to write good documentation for our merchants. If there is a way we can improve our documentation, please let us know through \nsupport@oxipay.com.au\n\n\n\n\n\n\nVersion 1.10", 
            "title": "WooCommerce Specific"
        }, 
        {
            "location": "/price-info/woocommerce/#adding-woocommerces-price-info-widget", 
            "text": "For adding Price-info Widget to your Website, follow the instruction  Step 1:  Find  Price.php  from the following location in your hosting (Wordpress installed Folder) and open it with your desired text-editor   YourWordpressFolder\\wp-content\\plugins\\woocommerce\\templates\\single-product  Step 2:  Find \"Price tag\" as shown below   p class= price ?php echo $product- get_price_html(); ? /p   Step 3:  Place the following  script  tag below the \"Price tag\".  script id= oxipay-banner  src= https://widgets.oxipay.com.au/content/scripts/price-info.js?productPrice= ?php echo $product- get_display_price() ? /script   Step 4:  Save and you should see a working widget on your website.    \n   Note:  If you are using a custom template for WooCommerce, \"Price.php\" will be located in \"yourtheme/woocommerce/single-product/price.php.\"   **We reserve the right to change any linked image at anytime without prior notice   We strive to write good documentation for our merchants. If there is a way we can improve our documentation, please let us know through  support@oxipay.com.au    Version 1.10", 
            "title": "Adding WooCommerce's Price-info Widget"
        }
    ]
}